<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudzone.mapper.DataSourceMapper">
  <resultMap id="BaseResultMap" type="com.cloudzone.common.entity.DataSource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="u_time" jdbcType="TIMESTAMP" property="uTime" />
    <result column="s_env" jdbcType="VARCHAR" property="sEnv" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, version, size, u_time, s_env
  </sql>
  <select id="selectByExample" parameterType="com.cloudzone.common.entity.DataSourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from data_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from data_source
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from data_source
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cloudzone.common.entity.DataSourceExample">
    delete from data_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cloudzone.common.entity.DataSource">
    insert into data_source (id, type, version, 
      size, u_time, s_env
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{uTime,jdbcType=TIMESTAMP}, #{sEnv,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cloudzone.common.entity.DataSource">
    insert into data_source
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="uTime != null">
        u_time,
      </if>
      <if test="sEnv != null">
        s_env,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="uTime != null">
        #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sEnv != null">
        #{sEnv,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cloudzone.common.entity.DataSourceExample" resultType="java.lang.Long">
    select count(*) from data_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update data_source
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.uTime != null">
        u_time = #{record.uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sEnv != null">
        s_env = #{record.sEnv,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update data_source
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      u_time = #{record.uTime,jdbcType=TIMESTAMP},
      s_env = #{record.sEnv,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloudzone.common.entity.DataSource">
    update data_source
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="uTime != null">
        u_time = #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sEnv != null">
        s_env = #{sEnv,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloudzone.common.entity.DataSource">
    update data_source
    set type = #{type,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      u_time = #{uTime,jdbcType=TIMESTAMP},
      s_env = #{sEnv,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>